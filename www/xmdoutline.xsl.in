<?xml version='1.0' encoding="utf-8"?>

<!-- 

  Originally a port to XSL by Steve Tinney of the FileMaker Pro dynamic
  HTML generator textdisplay.html which was developed by Madeleine Fitzgerald
  and Peter Damerow.

  This script is executed on the metadata (.xmd) file for an XTF text.

  If the parameter 'mode' is given its value must be either 'www' or 'pr'.
  This is used to control the black/white versioning for display/print
  respectively.  Note that most of the colour-switching is done in CSS.

  The parameter 'project' is used to support different skinning of
  transliterations via CSS and to select between different banners.

  v2.0, 12/11/05, placed in the public domain.

  -->

<xsl:stylesheet version="1.0" 
  xmlns:e="http://exslt.org/common"
  xmlns:md="http://oracc.org/ns/xmd/1.0"
  xmlns:xpd="http://oracc.org/ns/xpd/1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:etcsl="http://www-etcsl.orient.ox.ac.uk/etcsl"
  extension-element-prefixes="e"
  exclude-result-prefixes="md etcsl xpd">

<xsl:output method="xml" indent="yes" omit-xml-declaration="yes"/>

<xsl:param name="mode" select="'www'"/>
<xsl:param name="project" select="''"/>
<xsl:param name="access" select="''"/>
<xsl:param name="line-id" select="''"/>
<xsl:param name="frag-id" select="''"/>
<xsl:param name="views-cuneified" select="'no'"/>
<xsl:param name="views-proofing" select="'no'"/>
<xsl:param name="views-tei" select="'no'"/>

<xsl:template match="/">
  <div class="xmdoutline bt-4 bb-4 br-1">
    <xsl:call-template name="numbers"/>
    <xsl:call-template name="views"/>
    <xsl:call-template name="details"/>
    <xsl:call-template name="biblio"/>
  </div>
</xsl:template>

<xsl:template name="views-images">
  <xsl:variable name="drawing" select="/*/md:cat/md:images/md:img[@type='l'][@scale='full']"/>
  <xsl:variable name="photo" select="/*/md:cat/md:images/md:img[@type='p'][@scale='full']"/>
  <xsl:variable name="detail" select="/*/md:cat/md:images/md:img[@type='d'][@scale='full']"/>
  <xsl:variable name="detail-uri" select="concat('http://cdli.ucla.edu/dl/',
					  $detail/@src)"/>
  <xsl:variable name="drawing-uri" select="concat('http://cdli.ucla.edu/dl/',
					   $drawing/@src)"/>
  <xsl:variable name="photo-uri" select="concat('http://cdli.ucla.edu/dl/',
					 $photo/@src,'?xmdoutline')"/>
  <xsl:if test="$photo">
    <li><a href="{$photo-uri}" target="_blank">photo</a></li>
  </xsl:if>
  <xsl:if test="$drawing">
    <li><a href="{$drawing-uri}" target="_blank">line art</a></li>
  </xsl:if>
  <xsl:if test="$detail">
    <li><a href="{$detail-uri}" target="_blank">details</a></li>
  </xsl:if>
</xsl:template>

<xsl:template name="views">
  <h3 class="h3">Views</h3>
  <ul>
    <xsl:for-each select="/*/md:cat/md:images">
      <xsl:choose>
	<xsl:when test="@public">
	  <xsl:call-template name="views-images"/>
	</xsl:when>
	<xsl:when test="../md:public_image='yes'">
	  <xsl:call-template name="views-images"/>
	</xsl:when>
      </xsl:choose>
    </xsl:for-each>
    <xsl:call-template name="arg-views-nowrap"/>
  </ul>
</xsl:template>

<xsl:template name="arg-views">
  <ul>
    <xsl:call-template name="arg-views-nowrap"/>
  </ul>
</xsl:template>

<xsl:template name="arg-views-nowrap">
  <xsl:variable name="text" select="/*/@xml:id"/>

  <xsl:if test="$views-cuneified='yes'">
    <li><a target="_blank" href="javascript:cuneifyPopup('{$project}','{/*/@xml:id}')">Cuneified</a></li>
  </xsl:if>
  <xsl:if test="$views-proofing='yes'">
    <li><a target="_blank" href="javascript:showproofing('{$project}','{/*/@xml:id}')">Proofing</a></li>
  </xsl:if>
  <xsl:for-each select="document(concat('@@ORACC@@/xml/',$project,'/config.xml'))/*/xpd:option[@name='build-tei'='yes']">
    <li><a target="_blank" href="/{$project}/tei/{$text}.xml">TEI</a></li>
  </xsl:for-each>
  <xsl:for-each select="document(concat('@@ORACC@@/xml/',$project,'/config.xml'))/*/xpd:option[@name='pager-custom-view']">
    <xsl:choose>
      <xsl:when test="contains(@value,'=')">
	<xsl:call-template name="custom-view">
	  <xsl:with-param name="text" select="$text"/>
	</xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
	<xsl:call-template name="custom-view">
	  <xsl:with-param name="text" select="$text"/>
	</xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:for-each>
</xsl:template>

<xsl:template name="custom-view">
  <xsl:param name="text"/>
  <li><a target="_blank" 
	 href="/cgi-bin/customview.plx?project={$project}&amp;text={$text}&amp;input={xpd:input}&amp;script={xpd:script}">
  <xsl:value-of select="xpd:title"/></a></li>
</xsl:template>

<xsl:template name="numbers">
  <h3 class="h3">Numbers</h3>
  <ul>
    <xsl:for-each select="/*/md:cat">
      <li>
	<xsl:choose>
	  <xsl:when test="starts-with(md:id_text,'P')">
	    <a href="http://cdli.ucla.edu/{md:id_text/text()}">
	      <xsl:value-of select="md:id_text"/>
	    </a>
	  </xsl:when>
	  <xsl:when test="md:id_composite">
	    <xsl:value-of select="md:id_composite"/>
	  </xsl:when>
	  <xsl:otherwise>
	    <xsl:value-of select="md:id_text"/>
	  </xsl:otherwise>
	</xsl:choose>
      </li>
      <xsl:if test="string-length(md:museum_no)>0">
	<li><xsl:value-of select="md:museum_no"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:accession_no)>0">
	<li><xsl:value-of select="md:accession_no"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:excavation_no)>0">
	<li><xsl:value-of select="md:excavation_no"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:primary_publication)>0">
	<li><xsl:value-of select="md:primary_publication"/></li>
      </xsl:if>
    </xsl:for-each>
  </ul>
</xsl:template>

<xsl:template name="details">
  <h3 class="h3">Details</h3>
  <ul>
    <xsl:for-each select="/*/md:cat">
      <xsl:if test="string-length(md:object_type)>0 
		    and not(md:object_type = 'tablet')">
	<li><xsl:value-of select="md:object_type"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:period)>0">
	<li><xsl:value-of select="md:period"/>
	<xsl:if test="string-length(md:date_of_origin)>0">
	  <xsl:text> (</xsl:text><xsl:value-of select="md:date_of_origin"/><xsl:text>)</xsl:text>
	</xsl:if>
	</li>
      </xsl:if>
      <xsl:if test="string-length(md:provenience)>0">
	<li>
	  <xsl:value-of select="md:provenience"/>
	  <xsl:if test="md:provenience = 'unclear'">
	    <xsl:text> provenience</xsl:text>
	  </xsl:if>
	</li>
      </xsl:if>
      <xsl:if test="string-length(md:genre)>0">
	<li><xsl:value-of select="md:genre"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:subgenre)>0">
	<li><xsl:value-of select="md:subgenre"/></li>
      </xsl:if>
      <xsl:if test="string-length(md:subgenre_remarks)>0">
	<li><xsl:value-of select="md:subgenre_remarks"/></li>
      </xsl:if>
    </xsl:for-each>
  </ul>
</xsl:template>

<xsl:template name="biblio">
  <xsl:choose>
    <xsl:when test="/*/md:cat/md:bibliography__shortref
		    and string-length(/*/md:cat/md:bibliography__shortref) > 0">
      <h3 class="h3">Bibliography</h3>
      <ul>
	<xsl:choose>
	  <xsl:when test="/*/md:cat/md:bibliography__shortref/md:subfield">
	    <xsl:for-each select="/*/md:cat/md:bibliography__shortref/md:subfield">
	      <xsl:variable name="nth" select="1+count(preceding-sibling::*)"/>
	      <li>
		<!--FIXME: add a href=R000000 here-->
		<xsl:value-of select="."/>
		<xsl:variable name="rpages"
			      select="/*/md:cat/md:pr_joins__pages/md:subfield[$nth]/text()
				      |/*/md:cat/md:qr_joins__pages/md:subfield[$nth]/text()"/>
		<xsl:if test="string-length($rpages)">
		  <xsl:value-of select="concat(', ', $rpages)"/>
		</xsl:if>
	      </li>
	    </xsl:for-each>
	  </xsl:when>
	  <xsl:otherwise>
	    <li>
	      <xsl:value-of select="/*/md:cat/md:bibliography__shortref/text()"/>
	      <xsl:variable name="rpages"
			    select="/*/md:cat/md:pr_joins__pages/text()
				    |/*/md:cat/md:qr_joins__pages/text()"/>
	      <xsl:if test="string-length($rpages)">
		<xsl:value-of select="concat(', ', $rpages)"/>
	      </xsl:if>
	    </li>
	  </xsl:otherwise>
	</xsl:choose>
      </ul>
    </xsl:when>
    <xsl:when test="string-length(/*/md:cat/md:publication_history)>0">
      <h3 class="h3">Bibliography</h3>
      <p><xsl:value-of select="/*/md:cat/md:publication_history"/></p>
    </xsl:when>
  </xsl:choose>
</xsl:template>

</xsl:stylesheet>
